{"version":3,"sources":["../../src/addon/qrscanner/pages/my-qrscanner/my-qrscanner.module.ts","../../src/addon/qrscanner/pages/my-qrscanner/my-qrscanner.ts","../../node_modules/@ionic-native/qr-scanner/index.js"],"names":[],"mappings":"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AAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC;IAC7D,CAAC;IA5D6B;QAA7B,yEAAS,CAAC,gFAAiB,CAAC;kCAAgB,gFAAiB;6DAAC;IADtD,kBAAkB;QAJ9B,wEAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;WACH;SACnC,CAAC;uKAWqF;YACzD,WAAW,EAAqB,EAAS;OAX1D,kBAAkB,CA8D9B;IAAD,CAAC;AAAA;SA9DY,kBAAkB,a;;;;;;;;;;;AC5B/B;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AACxB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,kCAAkC;AAClC,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,kBAAkB;AAClB;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS,0EAAmeAAe,6BAA6B;AAC5C;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC,eAAe;AACf;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC","file":"9.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonQRScannerPage } from './my-qrscanner';\n\n\n@NgModule({\n    declarations: [\n        AddonQRScannerPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(AddonQRScannerPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonQRScannerInputInfoPagePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/qrscanner/pages/my-qrscanner/my-qrscanner.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Component, ViewChild, OnDestroy } from '@angular/core';\nimport { IonicPage, NavController, AlertController } from 'ionic-angular';\nimport { DataService } from '@providers/data.service';\nimport { CoreTabsComponent } from '@components/tabs/tabs';\nimport { AddonQRScannerProvider } from '../../providers/qrscanner';\nimport { QRScanner } from '@ionic-native/qr-scanner';\n\n/**\n * Page that displays the list of calendar events.\n */\n@IonicPage({ segment: 'addon-qrscanner' })\n@Component({\n    selector: 'page-addon-my-qrscanner',\n    templateUrl: 'my-qrscanner.html',\n})\nexport class AddonQRScannerPage implements OnDestroy {\n    @ViewChild(CoreTabsComponent) tabsComponent: CoreTabsComponent;\n    ionApp: any;\n    ionicTabbar: any;\n\n    protected qrProvider: AddonQRScannerProvider;\n    protected prefetchIconsInitialized = false;\n    protected isDestroyed;\n    protected updateSiteObserver;\n    \n    constructor(private navCtrl: NavController, public alertController: AlertController,\n                private data: DataService, private qrScanner: QRScanner) {}\n\n    ionViewWillEnter(): void {\n      this.scanQR();\n    }\n    exitPage(): void {\n      this.navCtrl.setRoot('CoreLoginInitPage');\n    }\n    scanQR(): void {\n      this.qrScanner.scan().subscribe((text: string) => {\n          console.log('Scanned something', text);\n          this.dataHandle(text);\n      });\n    }\n    dataHandle(data: any): void {\n      try {\n        const obj = JSON.parse(data);\n        if (this.checkDataHandle(obj)) {\n          switch (obj.type) {\n            case 'EVALUATE':\n                this.data.setData(obj.value, 'scanner');\n                this.navCtrl.popToRoot();\n                this.navCtrl.parent.select(2);\n            break;\n            case 'COURSE':\n                this.navCtrl.push('CoreCourseSectionPage', { course: { id: obj.value } });\n            break;\n            default:\n                this.navCtrl.setRoot('CoreLoginInitPage');\n          }\n        }\n      } catch (e) {\n        console.log('Error is', e);\n      }\n    }\n    checkDataHandle(obj: any): boolean {\n      let result = false;\n      const teamplateData = {type: '', value: ''};\n      for (const el in obj) {\n        result = teamplateData.hasOwnProperty(el);\n      }\n\n      return result;\n    }\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.updateSiteObserver && this.updateSiteObserver.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/qrscanner/pages/my-qrscanner/my-qrscanner.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @name QR Scanner\n * @description\n * A fast, energy efficient, highly-configurable QR code scanner for Cordova apps.\n *\n * Requires Cordova plugin: `cordova-plugin-qrscanner`. For more info, please see the [QR Scanner plugin docs](https://github.com/bitpay/cordova-plugin-qrscanner).\n *\n * @usage\n * ```typescript\n * import { QRScanner, QRScannerStatus } from '@ionic-native/qr-scanner';\n *\n *\n * constructor(private qrScanner: QRScanner) { }\n *\n * ...\n *\n * // Optionally request the permission early\n * this.qrScanner.prepare()\n *   .then((status: QRScannerStatus) => {\n *      if (status.authorized) {\n *        // camera permission was granted\n *\n *\n *        // start scanning\n *        let scanSub = this.qrScanner.scan().subscribe((text: string) => {\n *          console.log('Scanned something', text);\n *\n *          this.qrScanner.hide(); // hide camera preview\n *          scanSub.unsubscribe(); // stop scanning\n *        });\n *\n *      } else if (status.denied) {\n *        // camera permission was permanently denied\n *        // you must use QRScanner.openSettings() method to guide the user to the settings page\n *        // then they can grant the permission from there\n *      } else {\n *        // permission was denied, but not permanently. You can ask for permission again at a later time.\n *      }\n *   })\n *   .catch((e: any) => console.log('Error is', e));\n *\n *\n * ```\n * @interfaces\n * QRScannerStatus\n */\nvar QRScanner = (function (_super) {\n    __extends(QRScanner, _super);\n    function QRScanner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Request permission to use QR scanner.\n     * @return {Promise<QRScannerStatus>}\n     */\n    /**\n       * Request permission to use QR scanner.\n       * @return {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.prepare = /**\n       * Request permission to use QR scanner.\n       * @return {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Call this method to enable scanning. You must then call the `show` method to make the camera preview visible.\n     * @return {Observable<string>} returns an Observable that emits the scanned text. Unsubscribe from the observable to stop scanning.\n     */\n    /**\n       * Call this method to enable scanning. You must then call the `show` method to make the camera preview visible.\n       * @return {Observable<string>} returns an Observable that emits the scanned text. Unsubscribe from the observable to stop scanning.\n       */\n    QRScanner.prototype.scan = /**\n       * Call this method to enable scanning. You must then call the `show` method to make the camera preview visible.\n       * @return {Observable<string>} returns an Observable that emits the scanned text. Unsubscribe from the observable to stop scanning.\n       */\n    function () {\n        return;\n    };\n    /**\n     * Configures the native webview to have a transparent background, then sets the background of the <body> and <html> DOM elements to transparent, allowing the webview to re-render with the transparent background.\n     * @returns {Promise<QRScannerStatus>}\n     */\n    /**\n       * Configures the native webview to have a transparent background, then sets the background of the <body> and <html> DOM elements to transparent, allowing the webview to re-render with the transparent background.\n       * @returns {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.show = /**\n       * Configures the native webview to have a transparent background, then sets the background of the <body> and <html> DOM elements to transparent, allowing the webview to re-render with the transparent background.\n       * @returns {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Configures the native webview to be opaque with a white background, covering the video preview.\n     * @returns {Promise<QRScannerStatus>}\n     */\n    /**\n       * Configures the native webview to be opaque with a white background, covering the video preview.\n       * @returns {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.hide = /**\n       * Configures the native webview to be opaque with a white background, covering the video preview.\n       * @returns {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Enable the device's light (for scanning in low-light environments).\n     * @returns {Promise<QRScannerStatus>}\n     */\n    /**\n       * Enable the device's light (for scanning in low-light environments).\n       * @returns {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.enableLight = /**\n       * Enable the device's light (for scanning in low-light environments).\n       * @returns {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Destroy the scanner instance.\n     * @returns {Promise<QRScannerStatus>}\n     */\n    /**\n       * Destroy the scanner instance.\n       * @returns {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.destroy = /**\n       * Destroy the scanner instance.\n       * @returns {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Disable the device's light.\n     * @return {Promise<QRScannerStatus>}\n     */\n    /**\n       * Disable the device's light.\n       * @return {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.disableLight = /**\n       * Disable the device's light.\n       * @return {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Use front camera\n     * @return {Promise<QRScannerStatus>}\n     */\n    /**\n       * Use front camera\n       * @return {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.useFrontCamera = /**\n       * Use front camera\n       * @return {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Use back camera\n     * @return {Promise<QRScannerStatus>}\n     */\n    /**\n       * Use back camera\n       * @return {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.useBackCamera = /**\n       * Use back camera\n       * @return {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set camera to be used.\n     * @param camera {number} Provide `0` for back camera, and `1` for front camera.\n     * @return {Promise<QRScannerStatus>}\n     */\n    /**\n       * Set camera to be used.\n       * @param camera {number} Provide `0` for back camera, and `1` for front camera.\n       * @return {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.useCamera = /**\n       * Set camera to be used.\n       * @param camera {number} Provide `0` for back camera, and `1` for front camera.\n       * @return {Promise<QRScannerStatus>}\n       */\n    function (camera) {\n        return;\n    };\n    /**\n     * Pauses the video preview on the current frame and pauses scanning.\n     * @return {Promise<QRScannerStatus>}\n     */\n    /**\n       * Pauses the video preview on the current frame and pauses scanning.\n       * @return {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.pausePreview = /**\n       * Pauses the video preview on the current frame and pauses scanning.\n       * @return {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Resumse the video preview and resumes scanning.\n     * @return {Promise<QRScannerStatus>}\n     */\n    /**\n       * Resumse the video preview and resumes scanning.\n       * @return {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.resumePreview = /**\n       * Resumse the video preview and resumes scanning.\n       * @return {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns permission status\n     * @return {Promise<QRScannerStatus>}\n     */\n    /**\n       * Returns permission status\n       * @return {Promise<QRScannerStatus>}\n       */\n    QRScanner.prototype.getStatus = /**\n       * Returns permission status\n       * @return {Promise<QRScannerStatus>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Opens settings to edit app permissions.\n     */\n    /**\n       * Opens settings to edit app permissions.\n       */\n    QRScanner.prototype.openSettings = /**\n       * Opens settings to edit app permissions.\n       */\n    function () { };\n    QRScanner.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            callbackStyle: 'node'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"prepare\", null);\n    __decorate([\n        Cordova({\n            callbackStyle: 'node',\n            observable: true,\n            clearFunction: 'cancelScan'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], QRScanner.prototype, \"scan\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"show\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"hide\", null);\n    __decorate([\n        Cordova({\n            callbackStyle: 'node'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"enableLight\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"destroy\", null);\n    __decorate([\n        Cordova({\n            callbackStyle: 'node'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"disableLight\", null);\n    __decorate([\n        Cordova({\n            callbackStyle: 'node'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"useFrontCamera\", null);\n    __decorate([\n        Cordova({\n            callbackStyle: 'node'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"useBackCamera\", null);\n    __decorate([\n        Cordova({\n            callbackStyle: 'node'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"useCamera\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"pausePreview\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"resumePreview\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], QRScanner.prototype, \"getStatus\", null);\n    __decorate([\n        Cordova({\n            sync: true\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], QRScanner.prototype, \"openSettings\", null);\n    /**\n     * @name QR Scanner\n     * @description\n     * A fast, energy efficient, highly-configurable QR code scanner for Cordova apps.\n     *\n     * Requires Cordova plugin: `cordova-plugin-qrscanner`. For more info, please see the [QR Scanner plugin docs](https://github.com/bitpay/cordova-plugin-qrscanner).\n     *\n     * @usage\n     * ```typescript\n     * import { QRScanner, QRScannerStatus } from '@ionic-native/qr-scanner';\n     *\n     *\n     * constructor(private qrScanner: QRScanner) { }\n     *\n     * ...\n     *\n     * // Optionally request the permission early\n     * this.qrScanner.prepare()\n     *   .then((status: QRScannerStatus) => {\n     *      if (status.authorized) {\n     *        // camera permission was granted\n     *\n     *\n     *        // start scanning\n     *        let scanSub = this.qrScanner.scan().subscribe((text: string) => {\n     *          console.log('Scanned something', text);\n     *\n     *          this.qrScanner.hide(); // hide camera preview\n     *          scanSub.unsubscribe(); // stop scanning\n     *        });\n     *\n     *      } else if (status.denied) {\n     *        // camera permission was permanently denied\n     *        // you must use QRScanner.openSettings() method to guide the user to the settings page\n     *        // then they can grant the permission from there\n     *      } else {\n     *        // permission was denied, but not permanently. You can ask for permission again at a later time.\n     *      }\n     *   })\n     *   .catch((e: any) => console.log('Error is', e));\n     *\n     *\n     * ```\n     * @interfaces\n     * QRScannerStatus\n     */\n    QRScanner = __decorate([\n        Plugin({\n            pluginName: 'QRScanner',\n            plugin: 'cordova-plugin-qrscanner',\n            pluginRef: 'QRScanner',\n            repo: 'https://github.com/bitpay/cordova-plugin-qrscanner',\n            platforms: ['Android', 'Browser', 'iOS', 'Windows']\n        })\n    ], QRScanner);\n    return QRScanner;\n}(IonicNativePlugin));\nexport { QRScanner };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/qr-scanner/index.js\n// module id = 2071\n// module chunks = 9"],"sourceRoot":""}